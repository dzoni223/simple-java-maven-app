name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Step 4: Set up AWS Credentials and Region
    - name: Set up AWS credentials and region
      run: |
        echo "[default]" > ~/.aws/config
        echo "region=${{ secrets.AWS_REGION }}" >> ~/.aws/config
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}

    # Step 5: Log in to AWS ECR
    - name: Log in to AWS ECR
      uses: aws-actions/amazon-ecr-login@v1

    # Step 6: Build the Docker image with multiple tags
    - name: Build Docker image
      run: |
        # DockerHub tag
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .

        # GHCR tag
        docker tag ${{ secrets.DOCKER_USERNAME }}/my-app:latest ghcr.io/${{ github.repository_owner }}/my-app:latest

        # AWS ECR tag
        ECR_URI=$(aws ecr describe-repositories --repository-names my-app --region ${{ secrets.AWS_REGION }} --query "repositories[0].repositoryUri" --output text)
        docker tag ${{ secrets.DOCKER_USERNAME }}/my-app:latest $ECR_URI:latest

    # Step 7: Push Docker image to DockerHub
    - name: Push Docker image to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    # Step 8: Push Docker image to GitHub Container Registry
    - name: Push Docker image to GitHub Container Registry
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/my-app:latest

    # Step 9: Push Docker image to AWS ECR
    - name: Push Docker image to AWS ECR
      run: |
        ECR_URI=$(aws ecr describe-repositories --repository-names my-app --region ${{ secrets.AWS_REGION }} --query "repositories[0].repositoryUri" --output text)
        docker push $ECR_URI:latest
